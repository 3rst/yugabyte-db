-- $Id$
DROP FUNCTION check_test( TEXT, BOOLEAN );
DROP FUNCTION check_test( TEXT, BOOLEAN, TEXT );
DROP FUNCTION check_test( TEXT, BOOLEAN, TEXT, TEXT );
DROP FUNCTION check_test( TEXT, BOOLEAN, TEXT, TEXT, TEXT );
DROP FUNCTION can ( NAME[] );
DROP FUNCTION can ( NAME[], TEXT );
DROP FUNCTION can ( NAME, NAME[] );
DROP FUNCTION can ( NAME, NAME[], TEXT );
DROP FUNCTION _pg_sv_type_array( OID[] );
DROP FUNCTION can_ok( NAME );
DROP FUNCTION can_ok( NAME, TEXT );
DROP FUNCTION can_ok( NAME, NAME[] );
DROP FUNCTION can_ok ( NAME, NAME[], TEXT );
DROP FUNCTION can_ok( NAME, NAME );
DROP FUNCTION can_ok ( NAME, NAME, TEXT );
DROP FUNCTION can_ok( NAME, NAME, NAME[] );
DROP FUNCTION can_ok ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION fk_ok ( NAME, NAME, NAME, NAME );
DROP FUNCTION fk_ok ( NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION fk_ok ( NAME, NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION fk_ok ( NAME, NAME, NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION fk_ok ( NAME, NAME[], NAME, NAME[] );
DROP FUNCTION fk_ok ( NAME, NAME, NAME[], NAME, NAME, NAME[] );
DROP FUNCTION fk_ok ( NAME, NAME[], NAME, NAME[], TEXT );
DROP FUNCTION fk_ok ( NAME, NAME, NAME[], NAME, NAME, NAME[], TEXT );
DROP FUNCTION col_has_check ( NAME, NAME );
DROP FUNCTION col_has_check ( NAME, NAME, TEXT );
DROP FUNCTION col_has_check ( NAME, NAME, NAME, TEXT );
DROP FUNCTION col_has_check ( NAME, NAME[] );
DROP FUNCTION col_has_check ( NAME, NAME[], TEXT );
DROP FUNCTION col_has_check ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION has_check ( NAME );
DROP FUNCTION has_check ( NAME, TEXT );
DROP FUNCTION has_check ( NAME, NAME, TEXT );
DROP FUNCTION col_is_unique ( NAME, NAME );
DROP FUNCTION col_is_unique ( NAME, NAME, TEXT );
DROP FUNCTION col_is_unique ( NAME, NAME, NAME, TEXT );
DROP FUNCTION col_is_unique ( NAME, NAME[] );
DROP FUNCTION col_is_unique ( NAME, NAME[], TEXT );
DROP FUNCTION col_is_unique ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION has_unique ( TEXT );
DROP FUNCTION has_unique ( TEXT, TEXT );
DROP FUNCTION has_unique ( TEXT, TEXT, TEXT );
DROP FUNCTION col_isnt_fk ( NAME, NAME );
DROP FUNCTION col_isnt_fk ( NAME, NAME, TEXT );
DROP FUNCTION col_isnt_fk ( NAME, NAME, NAME, TEXT );
DROP FUNCTION col_isnt_fk ( NAME, NAME[] );
DROP FUNCTION col_isnt_fk ( NAME, NAME[], TEXT );
DROP FUNCTION col_isnt_fk ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION col_is_fk ( NAME, NAME );
DROP FUNCTION col_is_fk ( NAME, NAME, TEXT );
DROP FUNCTION col_is_fk ( NAME, NAME, NAME, TEXT );
DROP FUNCTION col_is_fk ( NAME, NAME[] );
DROP FUNCTION col_is_fk ( NAME, NAME[], TEXT );
DROP FUNCTION col_is_fk ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION _fkexists ( NAME, NAME[] );
DROP FUNCTION _fkexists ( NAME, NAME, NAME[] );
DROP FUNCTION hasnt_fk ( NAME );
DROP FUNCTION hasnt_fk ( NAME, TEXT );
DROP FUNCTION hasnt_fk ( NAME, NAME, TEXT );
DROP FUNCTION has_fk ( NAME );
DROP FUNCTION has_fk ( NAME, TEXT );
DROP FUNCTION has_fk ( NAME, NAME, TEXT );
DROP FUNCTION col_isnt_pk ( NAME, NAME );
DROP FUNCTION col_isnt_pk ( NAME, NAME, TEXT );
DROP FUNCTION col_isnt_pk ( NAME, NAME, NAME, TEXT );
DROP FUNCTION col_isnt_pk ( NAME, NAME[] );
DROP FUNCTION col_isnt_pk ( NAME, NAME[], TEXT );
DROP FUNCTION col_isnt_pk ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION col_is_pk ( NAME, NAME );
DROP FUNCTION col_is_pk ( NAME, NAME, TEXT );
DROP FUNCTION col_is_pk ( NAME, NAME, NAME, TEXT );
DROP FUNCTION col_is_pk ( NAME, NAME[] );
DROP FUNCTION col_is_pk ( NAME, NAME[], TEXT );
DROP FUNCTION col_is_pk ( NAME, NAME, NAME[], TEXT );
DROP VIEW pg_all_foreign_keys;
DROP FUNCTION _pg_sv_table_accessible( OID, OID );
DROP FUNCTION _pg_sv_column_array( OID, SMALLINT[] );
DROP FUNCTION _ckeys ( NAME, CHAR );
DROP FUNCTION _ckeys ( NAME, NAME, CHAR );
DROP FUNCTION hasnt_pk ( NAME );
DROP FUNCTION hasnt_pk ( NAME, TEXT );
DROP FUNCTION hasnt_pk ( NAME, NAME, TEXT );
DROP FUNCTION has_pk ( NAME );
DROP FUNCTION has_pk ( NAME, TEXT );
DROP FUNCTION has_pk ( NAME, NAME, TEXT );
DROP FUNCTION _hasc ( NAME, CHAR );
DROP FUNCTION _hasc ( NAME, NAME, CHAR );
DROP FUNCTION col_default_is ( NAME, NAME, TEXT );
DROP FUNCTION col_default_is ( NAME, NAME, anyelement, TEXT );
DROP FUNCTION col_default_is ( NAME, NAME, NAME, anyelement, TEXT );
DROP FUNCTION _def_is( TEXT, anyelement, TEXT );
DROP FUNCTION col_type_is ( NAME, NAME, TEXT );
DROP FUNCTION col_type_is ( NAME, NAME, TEXT, TEXT );
DROP FUNCTION col_type_is ( NAME, NAME, NAME, TEXT, TEXT );
DROP FUNCTION col_is_null ( NAME, NAME );
DROP FUNCTION col_is_null ( NAME, NAME, NAME );
DROP FUNCTION col_is_null ( NAME, NAME, NAME, TEXT );
DROP FUNCTION col_not_null ( NAME, NAME );
DROP FUNCTION col_not_null ( NAME, NAME, TEXT );
DROP FUNCTION col_not_null ( NAME, NAME, NAME, TEXT );
DROP FUNCTION _col_is_null ( NAME, NAME, TEXT, bool );
DROP FUNCTION _col_is_null ( NAME, NAME, NAME, TEXT, bool );
DROP FUNCTION hasnt_column ( NAME, NAME );
DROP FUNCTION hasnt_column ( NAME, NAME, TEXT );
DROP FUNCTION hasnt_column ( NAME, NAME, NAME, TEXT );
DROP FUNCTION has_column ( NAME, NAME );
DROP FUNCTION has_column ( NAME, NAME, TEXT );
DROP FUNCTION has_column ( NAME, NAME, NAME, TEXT );
DROP FUNCTION _cexists ( NAME, NAME );
DROP FUNCTION _cexists ( NAME, NAME, NAME );
DROP FUNCTION hasnt_view ( NAME );
DROP FUNCTION hasnt_view ( NAME, TEXT );
DROP FUNCTION hasnt_view ( NAME, NAME, TEXT );
DROP FUNCTION has_view ( NAME );
DROP FUNCTION has_view ( NAME, TEXT );
DROP FUNCTION has_view ( NAME, NAME, TEXT );
DROP FUNCTION hasnt_table ( NAME );
DROP FUNCTION hasnt_table ( NAME, TEXT );
DROP FUNCTION hasnt_table ( NAME, NAME, TEXT );
DROP FUNCTION has_table ( NAME );
DROP FUNCTION has_table ( NAME, TEXT );
DROP FUNCTION has_table ( NAME, NAME, TEXT );
DROP FUNCTION _rexists ( CHAR, NAME );
DROP FUNCTION _rexists ( CHAR, NAME, NAME );
DROP FUNCTION lives_ok ( TEXT );
DROP FUNCTION lives_ok ( TEXT, TEXT );
DROP FUNCTION throws_ok ( TEXT, int4 );
DROP FUNCTION throws_ok ( TEXT, int4, TEXT );
DROP FUNCTION throws_ok ( TEXT, int4, TEXT, TEXT );
DROP FUNCTION throws_ok ( TEXT );
DROP FUNCTION throws_ok ( TEXT, TEXT );
DROP FUNCTION throws_ok ( TEXT, TEXT, TEXT );
DROP FUNCTION throws_ok ( TEXT, CHAR(5), TEXT, TEXT );
DROP FUNCTION skip( int );
DROP FUNCTION skip( int, text );
DROP FUNCTION skip ( text );
DROP FUNCTION skip ( why text, how_many int );
DROP FUNCTION _todo();
DROP FUNCTION todo_end ();
DROP FUNCTION in_todo ();
DROP FUNCTION todo_start ();
DROP FUNCTION todo_start (text);
DROP FUNCTION todo ( how_many int );
DROP FUNCTION todo ( why text );
DROP FUNCTION todo ( why text, how_many int );
DROP FUNCTION fail ();
DROP FUNCTION fail ( text );
DROP FUNCTION pass ();
DROP FUNCTION pass ( text );
DROP FUNCTION cmp_ok (anyelement, text, anyelement);
DROP FUNCTION cmp_ok (anyelement, text, anyelement, text);
DROP FUNCTION unialike ( anyelement, text );
DROP FUNCTION unialike ( anyelement, text, text );
DROP FUNCTION unalike ( anyelement, text );
DROP FUNCTION unalike ( anyelement, text, text );
DROP FUNCTION doesnt_imatch ( anyelement, text );
DROP FUNCTION doesnt_imatch ( anyelement, text, text );
DROP FUNCTION doesnt_match ( anyelement, text );
DROP FUNCTION doesnt_match ( anyelement, text, text );
DROP FUNCTION _unalike ( BOOLEAN, ANYELEMENT, TEXT, TEXT );
DROP FUNCTION ialike ( anyelement, text );
DROP FUNCTION ialike ( anyelement, text, text );
DROP FUNCTION alike ( anyelement, text );
DROP FUNCTION alike ( anyelement, text, text );
DROP FUNCTION imatches ( anyelement, text );
DROP FUNCTION imatches ( anyelement, text, text );
DROP FUNCTION matches ( anyelement, text );
DROP FUNCTION matches ( anyelement, text, text );
DROP FUNCTION _alike ( BOOLEAN, ANYELEMENT, TEXT, TEXT );
DROP FUNCTION isnt (anyelement, anyelement);
DROP FUNCTION isnt (anyelement, anyelement, text);
DROP FUNCTION is (anyelement, anyelement);
DROP FUNCTION is (anyelement, anyelement, text);
DROP FUNCTION ok ( boolean );
DROP FUNCTION ok ( boolean, text );
DROP FUNCTION diag ( msg text );
DROP FUNCTION finish ();
DROP FUNCTION num_failed ();
DROP FUNCTION add_result ( bool, bool, text, text, text );
DROP FUNCTION _add ( text, integer );
DROP FUNCTION _add ( text, integer, text );
DROP FUNCTION _set ( integer, integer );
DROP FUNCTION _set ( text, integer );
DROP FUNCTION _set ( text, integer, text );
DROP FUNCTION _get_note ( integer );
DROP FUNCTION _get_note ( text );
DROP FUNCTION _get_latest ( text, integer );
DROP FUNCTION _get_latest ( text );
DROP FUNCTION _get ( text );
DROP FUNCTION no_plan();
DROP FUNCTION plan( integer );
DROP FUNCTION pg_typeof("any");
-- ## DROP SCHEMA TAPSCHEMA;
