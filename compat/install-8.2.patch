--- pgtap.sql.saf	2009-02-06 11:31:08.000000000 -0800
+++ pgtap.sql	2009-02-06 11:31:14.000000000 -0800
@@ -3004,63 +3004,6 @@
     SELECT ok( NOT _has_type( $1, ARRAY['e'] ), ('Enum ' || quote_ident($1) || ' should not exist')::text );
 $$ LANGUAGE sql;
 
--- enum_has_labels( schema, enum, labels, desc )
-CREATE OR REPLACE FUNCTION enum_has_labels( NAME, NAME, NAME[], TEXT )
-RETURNS TEXT AS $$
-    SELECT is(
-        ARRAY(
-            SELECT e.enumlabel
-              FROM pg_catalog.pg_type t
-              JOIN pg_catalog.pg_enum e ON (t.oid = e.enumtypid)
-              JOIN pg_catalog.pg_namespace n ON (t.typnamespace = n.oid)
-              WHERE t.typisdefined
-               AND n.nspname = $1
-               AND t.typname = $2
-               AND t.typtype = 'e'
-             ORDER BY e.oid
-        ),
-        $3,
-        $4
-    );
-$$ LANGUAGE sql;
-
--- enum_has_labels( schema, enum, labels )
-CREATE OR REPLACE FUNCTION enum_has_labels( NAME, NAME, NAME[] )
-RETURNS TEXT AS $$
-    SELECT enum_has_labels(
-        $1, $2, $3,
-        'Enum ' || quote_ident($1) || '.' || quote_ident($2) || ' should have labels (' || array_to_string( $3, ', ' ) || ')'
-    );
-$$ LANGUAGE sql;
-
--- enum_has_labels( enum, labels, desc )
-CREATE OR REPLACE FUNCTION enum_has_labels( NAME, NAME[], TEXT )
-RETURNS TEXT AS $$
-    SELECT is(
-        ARRAY(
-            SELECT e.enumlabel
-              FROM pg_catalog.pg_type t
-              JOIN pg_catalog.pg_enum e ON (t.oid = e.enumtypid)
-              WHERE t.typisdefined
-               AND pg_catalog.pg_type_is_visible(t.oid)
-               AND t.typname = $1
-               AND t.typtype = 'e'
-             ORDER BY e.oid
-        ),
-        $2,
-        $3
-    );
-$$ LANGUAGE sql;
-
--- enum_has_labels( enum, labels )
-CREATE OR REPLACE FUNCTION enum_has_labels( NAME, NAME[] )
-RETURNS TEXT AS $$
-    SELECT enum_has_labels(
-        $1, $2,
-        'Enum ' || quote_ident($1) || ' should have labels (' || array_to_string( $2, ', ' ) || ')'
-    );
-$$ LANGUAGE sql;
-
 -- check_test( test_output, pass, name, description, diag )
 CREATE OR REPLACE FUNCTION check_test( TEXT, BOOLEAN, TEXT, TEXT, TEXT )
 RETURNS SETOF TEXT AS $$
