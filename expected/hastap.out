\unset ECHO
1..45
ok 1 - has_table(non-existent table) should fail
ok 2 - has_table(non-existent table) should have the proper description
ok 3 - has_table(non-existent table) should have the proper diagnostics
ok 4 - has_table(non-existent schema, tab) should fail
ok 5 - has_table(non-existent schema, tab) should have the proper description
ok 6 - has_table(non-existent schema, tab) should have the proper diagnostics
ok 7 - has_table(sch, non-existent tab, desc) should fail
ok 8 - has_table(sch, non-existent tab, desc) should have the proper description
ok 9 - has_table(sch, non-existent tab, desc) should have the proper diagnostics
ok 10 - has_table(tab, desc) should pass
ok 11 - has_table(tab, desc) should have the proper description
ok 12 - has_table(tab, desc) should have the proper diagnostics
ok 13 - has_table(sch, tab, desc) should pass
ok 14 - has_table(sch, tab, desc) should have the proper description
ok 15 - has_table(sch, tab, desc) should have the proper diagnostics
ok 16 - has_view(non-existent view) should fail
ok 17 - has_view(non-existent view) should have the proper description
ok 18 - has_view(non-existent view) should have the proper diagnostics
ok 19 - has_view(non-existent view, desc) should fail
ok 20 - has_view(non-existent view, desc) should have the proper description
ok 21 - has_view(non-existent view, desc) should have the proper diagnostics
ok 22 - has_view(sch, non-existtent view, desc) should fail
ok 23 - has_view(sch, non-existtent view, desc) should have the proper description
ok 24 - has_view(sch, non-existtent view, desc) should have the proper diagnostics
ok 25 - has_view(view, desc) should pass
ok 26 - has_view(view, desc) should have the proper description
ok 27 - has_view(view, desc) should have the proper diagnostics
ok 28 - has_view(sch, view, desc) should pass
ok 29 - has_view(sch, view, desc) should have the proper description
ok 30 - has_view(sch, view, desc) should have the proper diagnostics
ok 31 - has_column(non-existent tab, col) should fail
ok 32 - has_column(non-existent tab, col) should have the proper description
ok 33 - has_column(non-existent tab, col) should have the proper diagnostics
ok 34 - has_column(non-existent tab, col, desc) should fail
ok 35 - has_column(non-existent tab, col, desc) should have the proper description
ok 36 - has_column(non-existent tab, col, desc) should have the proper diagnostics
ok 37 - has_column(non-existent sch, tab, col, desc) should fail
ok 38 - has_column(non-existent sch, tab, col, desc) should have the proper description
ok 39 - has_column(non-existent sch, tab, col, desc) should have the proper diagnostics
ok 40 - has_column(table, column) should pass
ok 41 - has_column(table, column) should have the proper description
ok 42 - has_column(table, column) should have the proper diagnostics
ok 43 - has_column(sch, tab, col, desc) should pass
ok 44 - has_column(sch, tab, col, desc) should have the proper description
ok 45 - has_column(sch, tab, col, desc) should have the proper diagnostics
